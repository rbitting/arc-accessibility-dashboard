{"version":3,"sources":["components/FileResults.js","components/FileAverages.js","components/SortableHeaderCell.js","components/FilesList.js","App.js","serviceWorker.js","index.js"],"names":["FileResults","id","console","log","this","props","data","listItems","map","file","className","key","href","requestedUrl","target","rel","categories","Math","ceil","performance","score","accessibility","seo","pwa","React","Component","FileAverages","icon","faChartPie","size","averages","avgPerf","avgADA","avgBP","avgSEO","avgPWA","SortableHeaderCell","handleClick","bind","sortNestedItems","category","sorting","sortOn","onClick","title","sortAsc","faCaretUp","faCaretDown","FilesList","state","fetch","then","response","json","getAllFileData","setState","setAverages","listOfFiles","i","length","push","download_url","Promise","all","value","isAsc","nested","split","items","sort","a","b","x","y","toLowerCase","faList","cellPadding","cellSpacing","App","src","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.172f9859.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../scss/results.scss';\r\n\r\nclass FileResults extends React.Component {\r\n    render() {\r\n        let id = 1;\r\n        console.log(this.props.data)\r\n        let listItems = this.props.data.map((file) =>\r\n            (<tr className=\"result-item\" key={\"result-item-\" + id++}>\r\n                <td className=\"result\">\r\n                    <a href={file.requestedUrl} target=\"_blank\" rel=\"noopener noreferrer\">{file.requestedUrl}</a>\r\n                </td>\r\n                <td className=\"result\">\r\n                    {file.categories ? Math.ceil(file.categories.performance.score * 100) : ''}\r\n                </td>\r\n                <td className=\"result\">\r\n                    {file.categories ? Math.ceil(file.categories.accessibility.score * 100) : ''}\r\n                </td>\r\n                <td className=\"result\">\r\n                    {file.categories ? Math.ceil(file.categories['best-practices'].score * 100) : ''}\r\n                </td>\r\n                <td className=\"result\">\r\n                    {file.categories ? Math.ceil(file.categories.seo.score * 100) : ''}\r\n                </td>\r\n                <td className=\"result\">\r\n                    {file.categories ? Math.ceil(file.categories.pwa.score * 100) : ''}\r\n                </td>\r\n            </tr>)\r\n        );\r\n        return (\r\n            <tbody>{this.props.data ? listItems : <tr></tr>}</tbody>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileResults;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChartPie } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass FileAverages extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"section-heading\"><FontAwesomeIcon icon={faChartPie} size=\"lg\" /><h2>Average Results</h2></div>\r\n                <div className=\"averages\">\r\n                    <div className=\"average-item\">\r\n                        <h3>Performance</h3>\r\n                        <div className=\"avg performance\">\r\n                            {this.props.averages.avgPerf}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"average-item\">\r\n                        <h3>Accessibility</h3>\r\n                        <div className=\"avg accessibility\">\r\n                            {this.props.averages.avgADA}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"average-item\">\r\n                        <h3>Best Practices</h3>\r\n                        <div className=\"avg best-practices\">\r\n                            {this.props.averages.avgBP}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"average-item\">\r\n                        <h3>SEO</h3>\r\n                        <div className=\"avg seo\">\r\n                            {this.props.averages.avgSEO}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"average-item\">\r\n                        <h3>Progressive Web App</h3>\r\n                        <div className=\"avg progressive\">\r\n                            {this.props.averages.avgPWA}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FileAverages;","import React from 'react';\r\nimport '../scss/results.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons';\r\n\r\nclass SortableHeaderCell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    handleClick() {\r\n        this.props.sortNestedItems(this.props.category);\r\n    };\r\n    render() {\r\n        return (\r\n            <th className={this.props.sorting.sortOn === this.props.category ? \"result sorted\" :\"result\"}>\r\n                <button onClick={this.handleClick}>{this.props.title} <FontAwesomeIcon icon={(this.props.sorting.sortOn === this.props.category && this.props.sorting.sortAsc) ? faCaretUp : faCaretDown} /></button>\r\n            </th>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SortableHeaderCell;","import React from 'react';\r\nimport '../scss/results.scss';\r\nimport FileResults from './FileResults.js';\r\nimport FileAverages from './FileAverages';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faList } from '@fortawesome/free-solid-svg-icons';\r\nimport SortableHeaderCell from './SortableHeaderCell';\r\n\r\nclass FilesList extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n            data: [],\r\n            averages: {\r\n                avgPerf: null,\r\n                avgADA: null,\r\n                avgBP: null,\r\n                avgSEO: null,\r\n                avgPWA: null\r\n            },\r\n            sorting: {\r\n                sortOn: \"\",\r\n                sortAsc: false\r\n            }\r\n        }\r\n        this.sortNestedItems = this.sortNestedItems.bind(this)\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://api.github.com/repos/rbitting/testing/contents/audits\")\r\n\t\t.then( (response) => {\r\n\t\t\treturn response.json() })\r\n\t\t.then( (json) => { \r\n            this.getAllFileData(json).then(data => {\r\n                this.setState({\r\n                    data: data\r\n                });\r\n                this.setAverages(data);\r\n            });\r\n\t\t})\r\n    }\r\n\r\n    getAllFileData(listOfFiles) {\r\n        let data = [];\r\n        for (let i=1; i<listOfFiles.length; i++) {\r\n            data.push(fetch(listOfFiles[i].download_url).then(response => response.json()));\r\n        }\r\n        return Promise.all(data);\r\n    }\r\n\r\n    setAverages(data) {\r\n        let averages = {\r\n            avgPerf: 0,\r\n            avgADA: 0,\r\n            avgBP: 0,\r\n            avgSEO: 0,\r\n            avgPWA: 0\r\n        }\r\n        for (let i=0;i<data.length;i++) {\r\n            averages.avgPerf += (data[i].categories.performance.score * 100);\r\n            averages.avgADA += (data[i].categories.accessibility.score * 100);\r\n            averages.avgBP += (data[i].categories[\"best-practices\"].score * 100);\r\n            averages.avgSEO += (data[i].categories.seo.score * 100);\r\n            averages.avgPWA += (data[i].categories.pwa.score * 100);\r\n        }\r\n        \r\n        this.setState({\r\n            averages: {\r\n                avgPerf: Math.ceil(averages.avgPerf / data.length),\r\n                avgADA: Math.ceil(averages.avgADA / data.length),\r\n                avgBP: Math.ceil(averages.avgBP / data.length),\r\n                avgSEO: Math.ceil(averages.avgSEO / data.length),\r\n                avgPWA: Math.ceil(averages.avgPWA / data.length)\r\n            }\r\n        });\r\n    }\r\n    sortNestedItems(value) {\r\n        let isAsc = true;\r\n        if (value === this.state.sorting.sortOn) \r\n            isAsc = !this.state.sorting.sortAsc;\r\n        const nested = value.split(\".\");\r\n        function compare(a,b) {\r\n            let x = a;\r\n            let y = b;\r\n            for (let i=0;i<nested.length;i++) {\r\n                x = x[nested[i]];\r\n                y = y[nested[i]];\r\n            }\r\n            if (typeof x === \"string\") {\r\n                x = x.toLowerCase();\r\n            }\r\n            if (typeof y === \"string\") {\r\n                y = y.toLowerCase();\r\n            }\r\n            if (isAsc) {\r\n                if (x === null) {\r\n                    return 1;\r\n                }\r\n                else if (y === null) {\r\n                    return -1;\r\n                }\r\n                else if (x === y) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return x < y ? -1 : 1;\r\n                }\r\n            }\r\n            else {\r\n                if (x === null) {\r\n                    return -1;\r\n                }\r\n                else if (y === null) {\r\n                    return 1;\r\n                }\r\n                else if (x === y) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return x > y ? -1 : 1;\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            items: this.state.data.sort(compare),\r\n            sorting: {\r\n                sortOn: value,\r\n                sortAsc: isAsc\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <FileAverages averages={this.state.averages} />\r\n                <div className=\"section-heading\">\r\n                    <FontAwesomeIcon icon={faList} size=\"lg\" /><h2>All Data</h2>\r\n                </div>\r\n                <div className=\"table-container\">\r\n                    <table className=\"results\" cellPadding=\"0\" cellSpacing=\"0\">\r\n                        <thead>\r\n                            <tr className=\"result-item heading\">\r\n                                <SortableHeaderCell title=\"URL\" category=\"requestedUrl\" sorting={this.state.sorting} sortNestedItems={this.sortNestedItems}/>\r\n                                <SortableHeaderCell title=\"Performance\" category=\"categories.performance.score\" sorting={this.state.sorting} sortNestedItems={this.sortNestedItems}/>\r\n                                <SortableHeaderCell title=\"Accessibility\" category=\"categories.accessibility.score\" sorting={this.state.sorting} sortNestedItems={this.sortNestedItems}/>\r\n                                <SortableHeaderCell title=\"Best Practices\" category=\"categories.best-practices.score\" sorting={this.state.sorting} sortNestedItems={this.sortNestedItems}/>\r\n                                <SortableHeaderCell title=\"SEO\" category=\"categories.seo.score\" sorting={this.state.sorting} sortNestedItems={this.sortNestedItems}/>\r\n                                <SortableHeaderCell title=\"Progressive Web App\" category=\"categories.pwa.score\" sorting={this.state.sorting} sortNestedItems={this.sortNestedItems}/>\r\n                            </tr>\r\n                        </thead>\r\n                        <FileResults data={this.state.data} />\r\n                    </table>\r\n                </div>\r\n                <div className=\"disclaimer\">\r\n                    Accessibility data pulled from GitHub: <a href=\"https://github.com/rbitting/testing/tree/master/audits\" target=\"_blank\" rel=\"noopener noreferrer\">https://github.com/rbitting/testing/tree/master/audits</a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FilesList;","import React from 'react';\nimport FilesList from './components/FilesList.js';\nimport './scss/global.scss';\n\nfunction App() {\n  return (\n    <div>\n      <header>\n        <div className=\"container\">\n          <div className=\"logo\"><img src=\"https://via.placeholder.com/100x33.png?text=Logo\" alt=\"Logo placeholder C/O https://placeholder.com/\"/></div>\n          <h1>Web Accessibility Dashboard</h1>\n        </div>\n      </header>\n      <FilesList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}